*dumpx.txt* create new window with mix of assembly and C and jump in current line disassembled

                        ____                      __  __ ~
                       |  _ \ _   _ _ __ ___  _ __\ \/ / ~
                       | | | | | | | '_ ` _ \| '_ \\  /  ~
                       | |_| | |_| | | | | | | |_) /  \  ~
                       |____/ \__,_|_| |_| |_| .__/_/\_\ ~
                                             |_|        


                        Simple way to dump your C/C++ code


==============================================================================
CONTENTS                                                       *clam-contents*

    1. Usage ........................... |DumpXUsage|
    2. Configuration ................... |DumpXConfiguration|
        2.1 g:dumpxCC .................. |DumpXConfiguration_dumpxCC|
        2.2 g:dumpxCFLAGS .............. |DumpXConfiguration_dumpxCFLAGS|
        2.3 g:dumpxMode ................ |DumpXConfiguration_dumpxMode|
    3. License ......................... |DumpXLicense|
    4. Bugs ............................ |DumpXBugs|
    5. Contributing .................... |DumpXContributing|
    6. Changelog ....................... |DumpXChangelog|

==============================================================================
1. Usage                                                          *DumpXUsage*

The function DumpX accept one argument for positioning window on up,down,left,
right. From  current window: >
    :call DumpX('up')
    :call DumpX('Down')
    :call DumpX('left')
    :call DumpX('right')

You can use command with same effect: >
    :DumpXTop
    :DXT
    :DumpXBottom
    :DXB
    :DumpXLeft
    :DXL
    :DumpXRight
    :DXR

Automatic load CFlags: >
    :DXAF

DumpX build only current file in /tmp to get assembly code.
You can configure building with global var dumpxCC, dumpxCFLAGS, dumpxMode

==============================================================================
2. Configuration                                          *DumpXConfiguration*

You can configure the following settings to change how DumpX works.

------------------------------------------------------------------------------
2.1 g:dumpxCC                                     *DumpXConfiguration_dumpxCC*

Set this to change default compiler: >

    let g:dumpxCC = 'gcc'

Default: 'gcc'

------------------------------------------------------------------------------
2.2 g:dumpxCFLAGS                             *DumpXConfiguration_dumpxCFLAGS*

Set this to change default compiler option: >

    let g:dumpxCFLAGS = '-O3'

Default: ''

------------------------------------------------------------------------------
2.3 g:dumpxMode                                 *DumpXConfiguration_dumpxMode*

Select mode to view assembly output 

Only assembly without jump to current source line: >
    let g:dumpxMode = 0

Mix mode and jump to current source line: >
	let g:dumpxMode = 1

Disassembly only current line
	let g:dumpxMode = 2

Default: 1

==============================================================================
3. License                                                      *DumpXLicense*

DumpX is GPLv3 licensed.

==============================================================================
4. Bugs                                                            *DumpXBugs*

If you find a bug please post it on the issue tracker:

https://github.com/vbextreme/dumpx/issues

==============================================================================
5. Contributing                                            *DumpXContributing*

Think you can make this plugin better?  Awesome!  Fork it on GitHub and send 
a pull request.

https://github.com/vbextreme/dumpx/pulls

==============================================================================
6. Changelog                                                  *DumpxChangelog*

v0.4
    * Removed useless features, minor bug fix
v0.3
    * Add auto cflags for ycm, auto center match
v0.2
    * Add split right and left 
v0.1
    * Add only assembly, add partial disassembly
v0.0
    * Initial release.

==============================================================================
